# coding: utf-8

"""
    Pristime Workforce Scheduling API

             ## Pristime Workforce Scheduling API          The Pristime Scheduling API lets clients provide workers, shifts,         and constraints, and returns optimized schedules.          ## Authentication          All endpoints require an API key in the `Authorization` header.          ## Support          For technical support, contact us at antoine.hachez@pristime.com         

    The version of the OpenAPI document: 2.0.0
    Contact: antoine.hachez@pristime.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from pristime_sdk.models.shift import Shift

class TestShift(unittest.TestCase):
    """Shift unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> Shift:
        """Test Shift
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `Shift`
        """
        model = Shift()
        if include_optional:
            return Shift(
                start_datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end_datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                timezone = '',
                id = '',
                label = '',
                revenues = pristime_sdk.models.shift_revenues.ShiftRevenues(
                    per_assigned_hour = 56, 
                    continuity_revenue = 56, ),
                revenue = 56,
                breaks = [
                    pristime_sdk.models.period.Period(
                        start_datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        end_datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), )
                    ],
                tags = [
                    ''
                    ],
                required_skills = [
                    ''
                    ],
                assignment = pristime_sdk.models.shift_assignment.ShiftAssignment(
                    worker_id = '', 
                    is_locked = True, ),
                preceding_shift_id = ''
            )
        else:
            return Shift(
                start_datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                end_datetime = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
                timezone = '',
        )
        """

    def testShift(self):
        """Test Shift"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
